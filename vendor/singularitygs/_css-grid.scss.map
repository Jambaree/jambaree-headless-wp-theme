{"version":3,"sources":["_css-grid.scss"],"names":[],"mappings":"AAAA,qBAAqB;;AAErB;EACE;IACE,yCAAyC;GAC1C;EACD;IACE,YAAY;IACZ;MACE;QACE,mCAAmC;OACpC;MACD;QACE,iCAAiC;OAClC;KACF;;IAED,wDAAwD;;IAExD,yBAAyB;GAC1B;;EAED,cAAc;CACf;;AAED;EACE;IACE,gCAAgC;GACjC;;EAED,gBAAgB;CACjB;;AAED;EACE;IACE,uBAAuB;GACxB;;EAED;IACE,2BAA2B;IAC3B,4CAA4C;;IAE5C;MACE,eAAe;MACf,gBAAgB;KACjB;GACF;EACD;IACE;MACE,QAAQ;MACR,SAAS;KACV;GACF;CACF;;AAED;EACE,yBAAyB;EACzB,6BAA6B;EAC7B,yCAAyC;;EAEzC;IACE,cAAc;;IAEd;;MAEE;QACE,2DAA2D;OAC5D;MACD;QACE;UACE,2DAA2D;SAC5D;OACF;KACF;;IAED;;MAEE;QACE,4CAA4C;OAC7C;MACD;QACE;UACE,4CAA4C;SAC7C;OACF;KACF;;IAED;;MAEE;QACE,0DAA0D;OAC3D;MACD;QACE;UACE,0DAA0D;SAC3D;OACF;KACF;GACF;CACF;;AAED;EACE,mBAAmB;;EAEnB;IACE;;MAEE,sCAAsC;KACvC;IACD;;MAEE,0CAA0C;KAC3C;GACF;EACD;IACE,aAAa;IACb;MACE;QACE,YAAY;OACb;KACF;;IAED;;MAEE,qCAAqC;KACtC;IACD;;MAEE,0CAA0C;KAC3C;GACF;;EAED;IACE;MACE,qCAAqC;KACtC;IACD;MACE,yBAAyB;KAC1B;GACF;CACF","file":"_css-grid.scss","sourcesContent":["@import 'breakpoint';\n\n@function _css-gridtemplate-conversion($grid) {\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    @return unquote('repeat(#{$grid}, 1fr)');\n  }\n  @else if type-of($grid) == 'list' or length($grid) > 1 {\n    $holder: '';\n    @each $column in $grid {\n      @if unitless($column) {\n        $holder: $holder + '#{$column}fr ';\n      }\n      @else {\n        $holder: $holder + $column + ' ';\n      }\n    }\n\n    $holder: str-slice($holder, 0, str-length($holder) - 1);\n\n    @return unquote($holder);\n  }\n\n  @return $grid;\n}\n\n@function _css-grid-gap-conversion($gutter) {\n  @if unitless(nth($gutter, 1)) {\n    @return unquote('#{$gutter}fr');\n  }\n\n  @return $gutter;\n}\n\n@mixin _css-grid-container-padding-conversation($style) {\n  @if length($style) == 1 {\n    $style: nth($style, 1);\n  }\n\n  @if str-index($style, 'split') != null {\n    $gutter: find-gutter() / 2;\n    $padding: _css-grid-gap-conversion($gutter);\n\n    padding: {\n      left: $padding;\n      right: $padding;\n    }\n  }\n  @else {\n    padding: {\n      left: 0;\n      right: 0;\n    }\n  }\n}\n\n@mixin grid-container() {\n  $grids: sgs-get('grids');\n  $gutters: sgs-get('gutters');\n  $gutter-styles: sgs-get('gutter styles');\n\n  @supports (display: grid) {\n    display: grid;\n\n    // Build Column Templates\n    @each $mq, $grid in $grids {\n      @if $mq == -1px {\n        grid-template-columns: _css-gridtemplate-conversion($grid);\n      }\n      @else {\n        @include mq($mq) {\n          grid-template-columns: _css-gridtemplate-conversion($grid);\n        }\n      }\n    }\n\n    // Build Gaps\n    @each $mq, $gutter in $gutters {\n      @if $mq == -1px {\n        grid-gap: _css-grid-gap-conversion($gutter);\n      }\n      @else {\n        @include mq($mq) {\n          grid-gap: _css-grid-gap-conversion($gutter);\n        }\n      }\n    }\n\n    // Build Padding\n    @each $mq, $style in $gutter-styles {\n      @if $mq == -1px {\n        @include _css-grid-container-padding-conversation($style);\n      }\n      @else {\n        @include mq($mq) {\n          @include _css-grid-container-padding-conversation($style);\n        }\n      }\n    }\n  }\n}\n\n@mixin css-grid-span($Span, $Location: false) {\n  $grid: find-grid();\n\n  @if type-of($grid) == 'number' or length($grid) == 1 {\n    // If we have a symmetric grid _and_ no location, Float Span makes most sense\n    @if $Location == false {\n      @include float-span($Span, $Location);\n    }\n    // If we have an symmetric grid _and_ a location, Isolation Span makes most sense\n    @else {\n      @include isolation-span($Span, $Location);\n    }\n  }\n  @else if type-of($grid) == 'list' or length($grid) > 1 {\n    $calc: false;\n    @each $column in $grid {\n      @if not unitless($column) {\n        $calc: true;\n      }\n    }\n\n    // If we have an asymmetric grid _and_ it includes united numbers, needs to be Calc\n    @if ($calc) {\n      @include calc-span($Span, $Location);\n    }\n    // If we have an asymmetric grid _and_ it doesn't include united numbers, Islotion's better\n    @else {\n      @include isolation-span($Span, $Location);\n    }\n  }\n\n  @supports (display: grid) {\n    @if $Location {\n      grid-columns: $Location / span $Span;\n    }\n    @else {\n      grid-columns: span $Span;\n    }\n  }\n}"]}